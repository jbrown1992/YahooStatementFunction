// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace YahooStatementFunction.Migrations
{
    [DbContext(typeof(StockContext))]
    partial class StockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CashFlow", b =>
                {
                    b.Property<int>("CashFlowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CashFlowId"), 1L, 1);

                    b.Property<string>("CapitalExpenditure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("CashFlowId");

                    b.HasIndex("StockId");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("IncomeStatement", b =>
                {
                    b.Property<int>("IncomeStatementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncomeStatementId"), 1L, 1);

                    b.Property<string>("BasicAverageShares")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalDateEnding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("TotalRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncomeStatementId");

                    b.HasIndex("StockId");

                    b.ToTable("IncomeStatements");
                });

            modelBuilder.Entity("Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"), 1L, 1);

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("CashFlow", b =>
                {
                    b.HasOne("Stock", null)
                        .WithMany("cashFlowStatements")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomeStatement", b =>
                {
                    b.HasOne("Stock", null)
                        .WithMany("incomeStatements")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stock", b =>
                {
                    b.Navigation("cashFlowStatements");

                    b.Navigation("incomeStatements");
                });
#pragma warning restore 612, 618
        }
    }
}
